# Jobs defined here use the idp/ci docker image from ECR by default.
# Images are built via the identity-devops GitLab pipeline.

variables:
  BUNDLER_VERSION: '2.3.13'
  NVM_VERSION: 'v0.39.0'
  NODE_VERSION: 'latest'
  ECR_REGISTRY: '${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com'
  IDP_WORKER_IMAGE_TAG: 'main'
  IDP_IMAGE_TAG: 'main'
  PKI_IMAGE_TAG: 'main'

stages:
  - build
  - test

default:
  image: '${ECR_REGISTRY}/dashboard/ci:latest'

.build_cache:
  - &ruby_cache
    key:
      files:
        - Gemfile.lock
    paths:
      - vendor/ruby
    policy: pull

  - &npm_cache
    key:
      files:
        - package-lock.json
    paths:
      - .npm-cache/
    policy: pull

.bundle_npm_install: &bundle_npm_install
  - export BASH_ENV="$HOME/.bash.env"
  - wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/$NVM_VERSION/install.sh | bash
  - export NVM_DIR="$HOME/.nvm"
  - . "$NVM_DIR/nvm.sh" --install --latest-npm
  - echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
  - echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
  - gem install bundler --version $BUNDLER_VERSION
  - bundle check || bundle install --deployment --jobs=4 --retry=3 --without deploy development doc production --path vendor/ruby
  - npm ci --cache .npm-cache

install:
  stage: build
  cache:
    - <<: *ruby_cache
      policy: pull-push
    - <<: *npm_cache
      policy: pull-push
  script:
    - *bundle_npm_install

lints:
  stage: test
  cache:
    - <<: *ruby_cache
    - <<: *npm_cache
  script:
    - *bundle_npm_install
    - make lint

integration:
  stage: test
  cache:
    - <<: *ruby_cache
    - <<: *npm_cache
  script:
    - *bundle_npm_install
    - npm test
  variables:
    SKIP_VISUAL_REGRESSION_TEST: 'true'

snapshot-main:
  stage: test
  cache:
    - <<: *ruby_cache
    - <<: *npm_cache
  script:
    - git clone -b main --single-branch https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.login.gov/lg/identity-design-system.git
    - cd identity-design-system
    - *bundle_npm_install
    - make -j2 build-assets build-docs
    - scripts/snapshot.js
  artifacts:
    paths:
      - tmp/screenshot/branches
  except:
    - main

snapshot-branch:
  stage: test
  cache:
    - <<: *ruby_cache
    - <<: *npm_cache
  script:
    - *bundle_npm_install
    - make -j2 build-assets build-docs
    - scripts/snapshot.js
  artifacts:
    paths:
      - tmp/screenshot/branches
  except:
    - main

visual-regression:
  stage: test
  cache:
    - <<: *ruby_cache
    - <<: *npm_cache
  needs:
    - snapshot-main
    - snapshot-branch
  script:
    - *bundle_npm_install
    - npm test
  variables:
    ONLY_VISUAL_REGRESSION_TEST: 'true'
  except:
    - main
  dependencies:
    - snapshot-branch
    - snapshot-main
