# Jobs defined here use the idp/ci docker image from ECR by default.
# Images are built via the identity-devops GitLab pipeline.

variables:
  BUNDLER_VERSION: '2.3.13'
  NVM_VERSION: 'v0.39.0'
  ECR_REGISTRY: '${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com'

default:
  image: '${ECR_REGISTRY}/dashboard/ci:latest'

stages:
  - build
  - test
  - deploy

.build_cache:
  - &dependency_cache
    key:
      files:
        - Gemfile.lock
        - package-lock.json
    paths:
      - vendor/ruby
      - .npm-cache/
    policy: pull

.bundle_npm_install: &bundle_npm_install
  - export BASH_ENV="$HOME/.bash.env"
  - wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/$NVM_VERSION/install.sh | bash
  - export NVM_DIR="$HOME/.nvm"
  - . "$NVM_DIR/nvm.sh" --install --latest-npm
  - echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
  - echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
  - gem install bundler --version $BUNDLER_VERSION
  - bundle check || bundle install --deployment --jobs=4 --retry=3 --without deploy development doc production --path vendor/ruby
  - npm ci --cache .npm-cache --prefer-offline

install:
  stage: build
  cache:
    - <<: *dependency_cache
      policy: pull-push
  script:
    - *bundle_npm_install

lints:
  stage: test
  needs:
    - install
  cache:
    - <<: *dependency_cache
  script:
    - *bundle_npm_install
    - make lint

integration:
  stage: test
  needs:
    - install
  cache:
    - <<: *dependency_cache
  script:
    - *bundle_npm_install
    - npm test
  variables:
    SKIP_VISUAL_REGRESSION_TEST: 'true'

snapshot-main:
  stage: test
  needs:
    - install
  cache:
    - <<: *dependency_cache
  script:
    - git clone -b main --depth 1 https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.login.gov/lg/identity-design-system.git
    - cd identity-design-system
    - *bundle_npm_install
    - make -j2 build-assets build-docs
    - scripts/snapshot.js
    - mkdir -p ../tmp/screenshot/branches
    - mv tmp/screenshot/branches/$CI_COMMIT_REF_SLUG ../tmp/screenshot/branches/main
  artifacts:
    expire_in: 1h
    paths:
      - tmp/screenshot/branches/main/*.png
  except:
    - main

snapshot-branch:
  stage: test
  needs:
    - install
  cache:
    - <<: *dependency_cache
  script:
    - *bundle_npm_install
    - make -j2 build-assets build-docs
    - scripts/snapshot.js
  artifacts:
    expire_in: 1h
    paths:
      - tmp/screenshot/branches/$CI_COMMIT_REF_SLUG/*.png
  except:
    - main

visual-regression:
  stage: test
  needs:
    - install
  cache:
    - <<: *dependency_cache
  needs:
    - job: snapshot-main
      artifacts: true
    - job: snapshot-branch
      artifacts: true
  script:
    - *bundle_npm_install
    - npm test
  variables:
    ONLY_VISUAL_REGRESSION_TEST: 'true'
  except:
    - main
  artifacts:
    expose_as: Visual regression
    when: on_failure
    expire_in: 30d
    paths:
      - tmp/screenshot

pages:
  stage: deploy
  needs:
    - install
  cache:
    - <<: *dependency_cache
  script:
    - *bundle_npm_install
    - make -j2 build-assets build-docs
  artifacts:
    paths:
      - docs
  rules:
    # This ensures that only pushes to the default branch will trigger
    # a pages deploy
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  variables:
    PREVIEW_URL: https://$CI_PROJECT_NAMESPACE.pages.production.gitlab.login.gov/identity-design-system

preview:
  stage: deploy
  needs:
    - install
  cache:
    - <<: *dependency_cache
  script:
    - *bundle_npm_install
    - make -j2 build-assets build-docs
    - 'echo Preview URL: ${PREVIEW_URL}${PREVIEW_BASEURL}index.html'
  artifacts:
    paths:
      - docs
  variables:
    PREVIEW_URL: https://$CI_PROJECT_NAMESPACE.pages.production.gitlab.login.gov/identity-design-system
    PREVIEW_BASEURL: /-/$CI_PROJECT_NAME/-/jobs/$CI_JOB_ID/artifacts/preview/
