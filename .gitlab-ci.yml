# Jobs defined here use the idp/ci docker image from ECR by default. 
# Images are built via the identity-devops GitLab pipeline.

variables:
  BUNDLER_VERSION: "2.3.13"
  NVM_VERSION: "v0.39.0"
  NODE_VERSION: "latest"
  ECR_REGISTRY: '${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com'
  IDP_WORKER_IMAGE_TAG: 'main'
  IDP_IMAGE_TAG: 'main'
  PKI_IMAGE_TAG: 'main'

stages:
  - lint
  - test
  - build
  - snapshot
  - visual_regression



default:
  image: '${ECR_REGISTRY}/dashboard/ci:latest'


before_script:
  - export BASH_ENV="$HOME/.bash.env"
  - gem install bundler --version $BUNDLER_VERSION
  - wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/$NVM_VERSION/install.sh | bash
  - export NVM_DIR="$HOME/.nvm"
  - . "$NVM_DIR/nvm.sh" --install --latest-npm
  - echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
  - echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
  - node -v


cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - ~/.npm
    - ~/.bundler

before_cache:
  script:
    - rm -f .bundler/ruby/2.6.0/cache/*.gem

.bundle-npm-install: &bundle_npm_install
  - gem install bundler --version $BUNDLER_VERSION
  - bundle check --path ~/.bundler || bundle install --path ~/.bundler
  - npm ci

build-docs:
  script:
    - *bundle_npm_install
    - make -j2 build-assets build-docs
    

lints:
  stage: lint
  script:
    - *bundle_npm_install
    - make lint

integration:
  stage: test
  script:
    - *bundle_npm_install
    - npm test 
  variables:
    SKIP_VISUAL_REGRESSION_TEST: "true"

snapshot-main:
  stage: snapshot
  script:
    - *bundle_npm_install
    - make -j2 build-assets build-docs
    - scripts/snapshot.js
  except:
    - main

snapshot-branch:
  stage: snapshot
  script:
    - *bundle_npm_install
    - make -j2 build-assets build-docs
    - scripts/snapshot.js
  artifacts:
    paths:
      - tmp/screenshot/branches/
  except:
    - main

visual-regression:
  stage: visual_regression
  script:
    - *bundle_npm_install
    - ls -la tmp/screenshot/branches/
    #- find tmp/screenshot/branches/ -mindepth 1 -maxdepth 1 -type d -exec cp -r {} tmp/screenshot/branches/ \;
    - npm test 
  variables:
    only_VISUAL_REGRESSION_TEST: "true"
  except:
    - main
  dependencies:
    - snapshot-branch
# test:
#   stage: test
#   script:
#     - *bundle_npm_install
#     - npm test 

# Workflows
# workflows:
#   version: 2
#   test:
#     jobs:
#       - lints
#       - integration
#   visual_regression:
#     jobs:
#       - snapshot-main:
#           rules:
#             - if: $CI_COMMIT_REF_NAME != "migration"
#       - snapshot-branch:
#           rules:
#             - if: $CI_COMMIT_REF_NAME != "migration"
#       - visual-regression:
#           rules:
#             - if: $CI_COMMIT_REF_NAME != "migration"
#           needs:
#             - snapshot-main
#             - snapshot-branch
