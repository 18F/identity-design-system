version: 2.1

executors:
  ruby_browsers:
    docker:
      - image: cimg/ruby:3.1-browsers
        environment:
          BUNDLER_VERSION: 2.2.20

commands:
  node-install:
    steps:
      - run:
          name: Switch Node.js version
          command: |
            wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
            export NVM_DIR="$HOME/.nvm"
            . "$NVM_DIR/nvm.sh" --install --latest-npm
            echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV;
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV;
      - run:
          name: Print Node.js version
          command: node -v
  bundle-npm-install:
    steps:
      - node-install
      - restore_cache:
          key: dependency-cache-ruby-{{ checksum ".ruby-version" }}-{{ checksum "package-lock.json" }}-{{ checksum "Gemfile.lock" }}
      - run:
          name: Update Bundler
          command: gem install bundler --version $BUNDLER_VERSION
      - run:
          name: Install bundle dependencies
          command: bundle check --path ~/.bundler || bundle install --path ~/.bundler
      - run:
          name: Install dependencies
          command: npm ci
      - save_cache:
          key: dependency-cache-ruby-{{ checksum ".ruby-version" }}-{{ checksum "package-lock.json" }}-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/.npm
            - ~/.bundler
  build:
    steps:
      - run:
          name: Build assets and site
          command: npm run build

jobs:
  lints:
    executor: ruby_browsers
    steps:
      - checkout
      - bundle-npm-install
      - run:
          name: Lint JavaScript, Sass, and lockfiles
          command: make lint
  integration:
    executor: ruby_browsers
    environment:
      SKIP_BUILD: true
      SKIP_VISUAL_REGRESSION_TEST: true
    steps:
      - checkout
      - bundle-npm-install
      - build
      - run:
          name: Run integration tests
          command: npm test
  visual-regression:
    executor: ruby_browsers
    environment:
      SKIP_BUILD: true
      ONLY_VISUAL_REGRESSION_TEST: true
    steps:
      - checkout
      - bundle-npm-install
      - build
      - run:
          name: Run visual regression test
          command: npm test
      - store_artifacts:
          path: tmp/results
          destination: results
      - store_test_results:
          path: tmp/results

workflows:
  version: 2
  test:
    jobs:
      - lints
      - integration
      - visual-regression
