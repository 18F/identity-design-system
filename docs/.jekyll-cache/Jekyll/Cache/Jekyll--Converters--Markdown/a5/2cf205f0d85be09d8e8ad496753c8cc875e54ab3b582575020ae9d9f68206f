I"Ü#<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install </span>identity-style-guide
</code></pre></div></div>

<p>If this is your first npm dependency, a <code class="highlighter-rouge">package-lock.json</code> file will be generated. Commit this file to source control.</p>

<p>The module is now installed at <code class="highlighter-rouge">./node_modules/identity-style-guide</code>. Woohoo!</p>

<h2 id="precompiled-css-javascript-fonts-and-images">Precompiled CSS, JavaScript, fonts, and images</h2>

<p>Youâ€™ll find the compiled assets in <code class="highlighter-rouge">dist/assets</code>. These are ready to be used in your project directly.</p>

<div class="usa-alert usa-alert--warning usa-alert__paragraph">
  <div class="usa-alert__body">
    <p class="usa-alert__text">The paths in the compiled CSS file assume that your asset folders follow the same structure as those in <code class="highlighter-rouge">dist/assets</code>. Copy this folder in its entirety, or compile the assets from source as described below.</p>
  </div>
</div>

<p>We recommend including these files from <code class="highlighter-rouge">node_modules</code> directly, either by linking to them at that location or by copying them automatically during a build process, to make upgrades easier in the future.</p>

<h3 id="copy-during-jekyll-build-process">Copy during Jekyll build process</h3>

<p>If youâ€™re using Jekyll, a simple plugin can help copy this file during your build process to keep your assets up-to-date. First, add this file to <code class="highlighter-rouge">_plugins/</code>:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># _plugins/copy_to_destination.rb</span>

<span class="k">module</span> <span class="nn">Jekyll</span>
  <span class="k">module</span> <span class="nn">CopyToDestination</span>
    <span class="k">class</span> <span class="nc">CopyGenerator</span> <span class="o">&lt;</span> <span class="no">Generator</span>
      <span class="k">def</span> <span class="nf">generate</span><span class="p">(</span><span class="n">site</span><span class="p">)</span>
        <span class="n">folders</span> <span class="o">=</span> <span class="n">site</span><span class="p">.</span><span class="nf">config</span><span class="p">[</span><span class="s1">'copy_to_destination'</span><span class="p">]</span> <span class="o">||</span> <span class="p">[]</span>

        <span class="n">static_files</span> <span class="o">=</span> <span class="n">folders</span><span class="p">.</span><span class="nf">map</span> <span class="k">do</span> <span class="o">|</span><span class="n">relative_path</span><span class="o">|</span>
          <span class="n">absolute_path</span> <span class="o">=</span> <span class="no">File</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">site</span><span class="p">.</span><span class="nf">source</span><span class="p">,</span> <span class="n">relative_path</span><span class="p">)</span>
          <span class="n">folder_path</span> <span class="o">=</span> <span class="no">File</span><span class="p">.</span><span class="nf">dirname</span><span class="p">(</span><span class="n">absolute_path</span><span class="p">)</span>
          <span class="n">entries</span> <span class="o">=</span> <span class="no">Dir</span><span class="p">.</span><span class="nf">glob</span><span class="p">(</span><span class="no">File</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">absolute_path</span><span class="p">,</span> <span class="s1">'**'</span><span class="p">,</span> <span class="s1">'*'</span><span class="p">))</span>
          <span class="n">files</span> <span class="o">=</span> <span class="n">entries</span><span class="p">.</span><span class="nf">select</span> <span class="p">{</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="no">File</span><span class="p">.</span><span class="nf">file?</span><span class="p">(</span><span class="n">f</span><span class="p">)</span> <span class="p">}</span>

          <span class="n">files</span><span class="p">.</span><span class="nf">map</span> <span class="k">do</span> <span class="o">|</span><span class="n">file</span><span class="o">|</span>
            <span class="n">relative_directory</span> <span class="o">=</span> <span class="no">File</span><span class="p">.</span><span class="nf">dirname</span><span class="p">(</span><span class="n">file</span><span class="p">).</span><span class="nf">sub</span><span class="p">(</span><span class="n">folder_path</span><span class="p">,</span> <span class="s1">''</span><span class="p">)</span>
            <span class="n">filename</span> <span class="o">=</span> <span class="no">File</span><span class="p">.</span><span class="nf">basename</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
            <span class="no">StaticFile</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="n">site</span><span class="p">,</span> <span class="n">folder_path</span><span class="p">,</span> <span class="n">relative_directory</span><span class="p">,</span> <span class="n">filename</span><span class="p">)</span>
          <span class="k">end</span>
        <span class="k">end</span><span class="p">.</span><span class="nf">flatten</span>

        <span class="n">site</span><span class="p">.</span><span class="nf">static_files</span><span class="p">.</span><span class="nf">concat</span><span class="p">(</span><span class="n">static_files</span><span class="p">)</span>
      <span class="k">end</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Then, configure it to copy the compiled assets to your site output folder:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># _config.yml</span>

<span class="na">copy_to_destination</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">node_modules/identity-style-guide/dist/assets</span>
</code></pre></div></div>

<h2 id="compiling-sass-in-your-build-process">Compiling Sass in your build process</h2>

<p>Use the original source scss files if your project will be extending styles â€”Â but youâ€™ll need to compile them in your build pipeline using a Sass compiler. The source scss files can be found in <code class="highlighter-rouge">dist/assets/scss</code>, and can be imported into your projectâ€™s scss files in one import:</p>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">@import</span> <span class="s1">'node_modules/identity-style-guide/dist/assets/scss/styles'</span><span class="p">;</span>
</code></pre></div></div>

<h3 id="use-with-rails">Use with Rails</h3>

<p>The scss files natively support <code class="highlighter-rouge">asset-path()</code> out-of-the-box for ease of use with the Rails Asset Pipeline. To use with Rails, configure Rails to look for assets in both <code class="highlighter-rouge">node_modules</code> and the identity-style-guide module:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># config/initializers/assets.rb</span>

<span class="no">Rails</span><span class="p">.</span><span class="nf">application</span><span class="p">.</span><span class="nf">config</span><span class="p">.</span><span class="nf">assets</span><span class="p">.</span><span class="nf">paths</span> <span class="o">&lt;&lt;</span> <span class="no">Rails</span><span class="p">.</span><span class="nf">root</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="s1">'node_modules'</span><span class="p">)</span>
<span class="no">Rails</span><span class="p">.</span><span class="nf">application</span><span class="p">.</span><span class="nf">config</span><span class="p">.</span><span class="nf">assets</span><span class="p">.</span><span class="nf">paths</span> <span class="o">&lt;&lt;</span> <span class="no">Rails</span><span class="p">.</span><span class="nf">root</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="s1">'node_modules/identity-style-guide/dist/assets'</span><span class="p">)</span>
</code></pre></div></div>

<p>Finally, import the styles into your main stylesheet:</p>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// app/assets/stylesheets/application.css.scss</span>

<span class="nv">$font-path</span><span class="p">:</span> <span class="s1">'fonts'</span><span class="p">;</span>
<span class="nv">$image-path</span><span class="p">:</span> <span class="s1">'img'</span><span class="p">;</span>

<span class="k">@import</span> <span class="s1">'identity-style-guide/dist/assets/scss/styles'</span><span class="p">;</span>
</code></pre></div></div>
:ET